{
  "version": 3,
  "sources": ["../../src/assets/logo.ts"],
  "sourcesContent": ["import type { IAsyncAnimationFrameRenderer, Rect, Size } from \"../lib/abstractions.js\";\r\nimport { Easing } from \"../lib/easing.js\";\r\nimport { Logger, type ILogger } from \"../lib/logger.js\";\r\n\r\nexport interface LogoConfiguration {\r\n    url: string;\r\n    size: Size;\r\n}\r\n\r\nexport type LogoOptions = Readonly<LogoConfiguration>;\r\n\r\nexport class Logo implements IAsyncAnimationFrameRenderer {\r\n\r\n    constructor(\r\n        options: LogoOptions,\r\n        private readonly logger: ILogger = new Logger(),\r\n    ) {\r\n        this.config = { ...options };\r\n    }\r\n\r\n    private readonly config: LogoConfiguration;\r\n\r\n    // private static logoUrl: string = \"bare_s\u00E5_80_logo_nobg.svg\";\r\n    private image: HTMLImageElement | null = null;\r\n\r\n    private static loadImageAsync(url: string): Promise<HTMLImageElement> {\r\n        return new Promise<HTMLImageElement>((res, rej) => {\r\n            const image = new Image();\r\n            image.onload = () => res(image);\r\n            image.onerror = (e, src, lineno, colno, error) => rej(error ?? new Error(`Image failed to load: ${url}`));\r\n            image.src = url;\r\n        });\r\n    }\r\n\r\n    get size(): Size {\r\n        return [...this.config.size];\r\n    }\r\n    set size(value: Size) {\r\n        this.config.size = [...value];\r\n    }\r\n\r\n    async initAsync(): Promise<this> {\r\n        this.image = await Logo.loadImageAsync(this.config.url);\r\n        return this;\r\n    }\r\n\r\n    createFrameRenderer(\r\n        ctx: CanvasRenderingContext2D\r\n    ): (time: DOMHighResTimeStamp) => boolean {\r\n\r\n\r\n        let scaleFactor = 0;\r\n        let hasLogged = false;\r\n        const imageScale = 0.8;\r\n\r\n        return (time: DOMHighResTimeStamp): boolean => {\r\n\r\n            if (scaleFactor < 1) {\r\n                const newScaleFactor = Math.min(Easing.easeInOut(time * 0.00006), 1);\r\n                scaleFactor = newScaleFactor > scaleFactor ? newScaleFactor : 1;\r\n            } else if (!hasLogged) {\r\n                this.logger.debug(\"Logo animation done\", time, scaleFactor);\r\n                hasLogged = true;\r\n            }\r\n\r\n            const [w, h] = this.size;\r\n            const currWH = (Math.min(w, h) * scaleFactor) * imageScale;\r\n            const size = [currWH, currWH];\r\n            const offset = [(w - currWH) / 2, (h - currWH) / (1.52 + ((0.68 * scaleFactor)))];\r\n            const dimensions: Rect = [...offset, ...size] as Rect;\r\n\r\n            ctx.drawImage(this.image!, ...dimensions);\r\n\r\n            return true;\r\n        };\r\n\r\n    }\r\n}\r\n"],
  "mappings": "AACA,OAAS,UAAAA,MAAc,mBACvB,OAAS,UAAAC,MAA4B,mBAS9B,MAAMC,CAA6C,CAEtD,YACIC,EACiBC,EAAkB,IAAIH,EACzC,CADmB,YAAAG,EAQrB,KAAQ,MAAiC,KANrC,KAAK,OAAS,CAAE,GAAGD,CAAQ,CAC/B,CAOA,OAAe,eAAeE,EAAwC,CAClE,OAAO,IAAI,QAA0B,CAACC,EAAKC,IAAQ,CAC/C,MAAMC,EAAQ,IAAI,MAClBA,EAAM,OAAS,IAAMF,EAAIE,CAAK,EAC9BA,EAAM,QAAU,CAACC,EAAGC,EAAKC,EAAQC,EAAOC,IAAUN,EAAIM,GAAA,KAAAA,EAAS,IAAI,MAAM,yBAAyBR,GAAK,CAAC,EACxGG,EAAM,IAAMH,CAChB,CAAC,CACL,CAEA,IAAI,MAAa,CACb,MAAO,CAAC,GAAG,KAAK,OAAO,IAAI,CAC/B,CACA,IAAI,KAAKS,EAAa,CAClB,KAAK,OAAO,KAAO,CAAC,GAAGA,CAAK,CAChC,CAEA,MAAM,WAA2B,CAC7B,YAAK,MAAQ,MAAMZ,EAAK,eAAe,KAAK,OAAO,GAAG,EAC/C,IACX,CAEA,oBACIa,EACsC,CAGtC,IAAIC,EAAc,EACdC,EAAY,GAChB,MAAMC,EAAa,GAEnB,OAAQC,GAAuC,CAE3C,GAAIH,EAAc,EAAG,CACjB,MAAMI,EAAiB,KAAK,IAAIpB,EAAO,UAAUmB,EAAO,IAAO,EAAG,CAAC,EACnEH,EAAcI,EAAiBJ,EAAcI,EAAiB,OACtDH,IACR,KAAK,OAAO,MAAM,sBAAuBE,EAAMH,CAAW,EAC1DC,EAAY,IAGhB,KAAM,CAACI,EAAGC,CAAC,EAAI,KAAK,KACdC,EAAU,KAAK,IAAIF,EAAGC,CAAC,EAAIN,EAAeE,EAC1CM,EAAO,CAACD,EAAQA,CAAM,EAEtBE,EAAmB,CAAC,GADX,EAAEJ,EAAIE,GAAU,GAAID,EAAIC,IAAW,KAAS,IAAOP,EAAc,EAC3C,GAAGQ,CAAI,EAE5C,OAAAT,EAAI,UAAU,KAAK,MAAQ,GAAGU,CAAU,EAEjC,EACX,CAEJ,CACJ",
  "names": ["Easing", "Logger", "Logo", "options", "logger", "url", "res", "rej", "image", "e", "src", "lineno", "colno", "error", "value", "ctx", "scaleFactor", "hasLogged", "imageScale", "time", "newScaleFactor", "w", "h", "currWH", "size", "dimensions"]
}
