import{Calc as m}from"../lib/calc.js";class c{constructor(t){this.config={patternSizeFactor:.5,starScaling:1,...t},this.origSize=[...t.size],this.stars=c.createStars(this.config,this.patternSize)}get patternSize(){const[t,e]=this.size;return[t*this.config.patternSizeFactor,e*this.config.patternSizeFactor]}get scaling(){return[this.size[0]/this.origSize[0],this.size[1]/this.origSize[1]]}get size(){return this.config.size}set size(t){this.config.size=[...t],this.animationState&&(this.animationState.pattern=this.createPattern(this.animationState.ctx))}static createStars(t,e){const r=[],[a,n]=e;for(let i=0;i<t.starCount;++i){const s=Math.random()*a,S=Math.random()*n,o=Math.random()*(m.avg(...t.size)*.001*t.starScaling);r.push([s,S,o])}return r}static renderStars(t,e,r){for(const a of t)e.beginPath(),e.arc(...a,0,2*Math.PI,!1),e.fillStyle=r,e.fill()}createPattern(t){const e=document.createElement("canvas");[e.width,e.height]=this.patternSize;const r=e.getContext("2d");return r.scale(...this.scaling),c.renderStars(this.stars,r,this.config.color),t.createPattern(e,"repeat")}createFrameRenderer(t,e){var i;const r=e.rotateDegPerSecond*(Math.PI/180);this.animationState={ctx:t,pattern:this.createPattern(t)};const[a,n]=(i=e.rotateCenterFactors)!=null?i:[.5,.65];return s=>{const S=s/1e3*r%(Math.PI*2),[o,l]=this.size;t.save(),t.translate(o*a,l*n),t.rotate(S),t.beginPath();const h=Math.sqrt((o*Math.max(a,1-a))**2+(l*Math.max(n,1-n))**2);return t.arc(0,0,h,0,2*Math.PI),t.fillStyle=this.animationState.pattern,t.fill(),t.strokeStyle="#FFF",t.stroke(),t.restore(),!0}}}export{c as Starfield};
//# sourceMappingURL=starfield.js.map
