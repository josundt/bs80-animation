import{Easing as f}from"../lib/easing.js";import{Logger as p}from"../lib/logger.js";class c{constructor(t,e=new p){this.logger=e;this.image=null;this.config={...t}}static loadImageAsync(t){return new Promise((e,a)=>{const i=new Image;i.onload=()=>e(i),i.onerror=(s,r,g,n,o)=>a(o!=null?o:new Error(`Image failed to load: ${t}`)),i.src=t})}get size(){return[...this.config.size]}set size(t){this.config.size=[...t]}async initAsync(){return this.image=await c.loadImageAsync(this.config.url),this}createFrameRenderer(t){let e=0,a=!1;const i=.8;return s=>{if(e<1){const m=Math.min(f.easeInOut(s*6e-5),1);e=m>e?m:1}else a||(this.logger.debug("Logo animation done",s,e),a=!0);const[r,g]=this.size,n=Math.min(r,g)*e*i,o=[n,n],l=[...[(r-n)/2,(g-n)/(1.52+.68*e)],...o];return t.drawImage(this.image,...l),!0}}}export{c as Logo};
//# sourceMappingURL=logo.js.map
